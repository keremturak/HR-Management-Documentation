{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MAKS HR Management System","text":"<p>This is a human resources application that includes four distinct roles: admin, company manager, employee, and guest. Each role is equipped with its own dashboard, profile, and pages tailored to their specific responsibilities.</p> <p>When a company manager registers, their registration is subject to approval by the admin. Once approved, the company manager gains access to the system and can subsequently add employees to the system.</p> <p>The Employee profile page encompasses personal information, salary details, and shift schedules. The employee dashboard also provides information about public holidays and details about the company they are employed by.</p> <p>Employees have the option to submit comments regarding their company, but these comments will only be published after receiving approval from the admin.</p> <p>For company managers, there is a dedicated page with comprehensive information about their company's financial status, including income, expenses, and profit and loss data.</p> <p>Guests who register with the application can access information and comments pertaining to all companies that are registered within the application.</p> <p></p>"},{"location":"Frontend/","title":"Frontend Giri\u015f","text":"bubble_sort.py<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"Frontend/#with-line-numbers","title":"With line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"Frontend/#highlighting-lines","title":"Highlighting lines","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"Frontend/#icons-and-emojs","title":"Icons and Emojs","text":""},{"location":"Get%20Started/","title":"Get Started","text":""},{"location":"Get%20Started/#what-is-maks-hr","title":"What is MAKS HR?","text":"<p>Maks HR is a Human Resources application that provides incredible convenience to its users. Company managers can monitor various parameters such as employees' leave days, salaries, happiness statuses, and the company's financial situation under one roof. Employees using the platform can provide transparent feedback about their companies' approaches by making comments. </p> <p>This prevents many surprises in today's working life and strengthens the ecosystem by ensuring transparency between employees and companies. By using this platform, you can contribute to advancing your industry for the greater good of humanity and engage in mutual assistance. Additionally, you can manage many situations through a single platform. So, don't wait! Start building and let's achieve much greater things together.</p>"},{"location":"Get%20Started/#why-use-maks-hr","title":"Why Use MAKS HR?","text":"<p>MAKS HR offers a range of benefits and features that make it a valuable tool for managing human resources effectively. Some reasons why you might choose to use MAKS HR include:</p> <ul> <li> <p>Comprehensive HR Management: MAKS HR provides a centralized platform for managing various aspects of human resources, including employee records, payroll, benefits administration, performance management, and more.</p> </li> <li> <p>Streamlined Processes: The platform automates many HR processes, reducing manual tasks and saving time. This includes tasks like leave management, onboarding, and performance evaluations.</p> </li> <li> <p>Employee Self-Service: MAKS HR offers self-service portals for employees, allowing them to access and update their personal information, view pay stubs, request time off, and more. This empowers employees and reduces administrative overhead.</p> </li> <li> <p>Data Security and Compliance: MAKS HR prioritizes data security and compliance with industry standards and regulations. This helps protect sensitive employee information and ensures legal compliance.</p> </li> <li> <p>Reporting and Analytics: The platform provides robust reporting and analytics tools, allowing HR teams to track key metrics, generate reports, and gain insights into workforce trends.</p> </li> <li> <p>Customization and Scalability: MAKS HR is often customizable to fit the specific needs and workflows of an organization. It can also scale with the growth of the company.</p> </li> <li> <p>Integration Capabilities: It can integrate with other software systems commonly used in organizations, such as accounting software, time tracking tools, and more.</p> </li> <li> <p>Enhanced Communication: The platform may include features for internal communication, helping to facilitate collaboration and transparency among team members.</p> </li> </ul> <p>Overall, MAKS HR aims to streamline HR operations, improve employee satisfaction, and provide the necessary tools for effective workforce management.</p>"},{"location":"Get%20Started/#kicking-the-tires","title":"Kicking the Tires","text":"<p>When it comes to evaluating the effectiveness of a new tool or system, the saying \"kicking the tires\" is quite fitting. It means taking a close look, testing things out, and getting a feel for how it works.</p> <p>In the context of MAKS HR, here are a few ways you can start \"kicking the tires\":</p> <ul> <li> <p>Explore the Dashboard: Begin by navigating through the dashboard. Familiarize yourself with the layout and the different sections available.</p> </li> <li> <p>Add Test Employees: Use the platform to add a few test employees. This will give you a sense of how employee data is managed.</p> </li> <li> <p>Simulate HR Processes: Test out various HR processes like onboarding, leave requests, and performance evaluations. See how smoothly they flow within the system.</p> </li> <li> <p>Generate Reports: Experiment with the reporting features to see how you can extract valuable insights from the data.</p> </li> </ul> <p>Remember, \"kicking the tires\" is all about getting hands-on experience and making sure the tool aligns with your needs and expectations. Enjoy exploring MAKS HR!</p>"},{"location":"Get%20Started/#how-does-it-work","title":"How Does it Work?","text":"<p>MAKS HR operates through a structured process designed to streamline HR management. Here's a breakdown of how it functions:</p> <ol> <li>Company Registration and Approval:</li> <li>Company managers start by registering their company on the platform.</li> <li>The registration request is then reviewed and approved by the admin.</li> <li> <p>Additionally, a confirmation email is sent to the registered company manager. Clicking the link in the email activates their account.</p> </li> <li> <p>Adding Employees:</p> </li> <li>After the company manager's account and company are approved, they can start adding employees to the system.</li> <li> <p>Each added employee receives an email containing their login information and account activation details.</p> </li> <li> <p>Company Manager Dashboard:</p> </li> <li>Once set up, company managers gain access to a comprehensive dashboard.</li> <li> <p>They can monitor parameters such as total employee count, employees added in the last 24 hours, and the overall economic status of the company.</p> </li> <li> <p>Employee Interaction:</p> </li> <li>Employees can log in to the system and edit their profile information, including profile pictures and personal details.</li> <li> <p>They also have the ability to provide feedback on their respective companies.</p> </li> <li> <p>Admin Approval for Feedback:</p> </li> <li>Comments provided by employees are subject to admin approval.</li> <li> <p>Once approved, guests and other specified users can view these comments.</p> </li> <li> <p>Monitoring Company Parameters:</p> </li> <li>Employees also have the capability to monitor various parameters related to their company, such as salary status, leave days, and more.</li> </ol> <p>This structured approach ensures that both company managers and employees can efficiently manage their HR processes and stay updated on crucial company metrics.</p>"},{"location":"Get%20Started/#whats-maks-hr-good-for","title":"What\u2019s MAKS HR Good For?","text":"<p>MAKS HR is a versatile Human Resources Management platform that excels in various areas of HR administration. Here's a closer look at its key strengths:</p> <p>1. Centralized HR Management:</p> <p>MAKS HR offers a centralized repository for all HR-related activities. Whether it's maintaining employee records, managing payroll, overseeing benefits, or conducting performance evaluations, everything can be efficiently handled from one central hub.</p> <p>2. Automated HR Processes:</p> <p>Say goodbye to time-consuming manual tasks. MAKS HR automates numerous HR processes, including onboarding, leave management, and performance assessments. This automation not only saves valuable time but also reduces the likelihood of errors.</p> <p>3. Employee Empowerment:</p> <p>MAKS HR empowers employees by providing self-service portals. Through these portals, employees can access and update their personal information, request time off, view pay stubs, and more. This self-service approach enhances their overall experience and reduces the administrative burden on HR teams.</p> <p>4. Data Security and Compliance:</p> <p>Data security is paramount in HR, and MAKS HR takes this seriously. The platform is designed to protect sensitive employee information and ensure compliance with industry regulations and standards. You can trust that your data is safe.</p> <p>5. Robust Reporting and Analytics:</p> <p>HR teams benefit from MAKS HR's robust reporting and analytics tools. These features enable HR professionals to track key metrics, generate comprehensive reports, and gain valuable insights into workforce trends. Informed decision-making becomes more accessible.</p> <p>6. Customization and Scalability:</p> <p>No two organizations are exactly alike. MAKS HR acknowledges this by offering customization options to align with your specific HR workflows and processes. As your organization grows, the platform scales seamlessly to accommodate your evolving needs.</p> <p>7. Integration Capabilities:</p> <p>MAKS HR is not an island; it's designed to integrate seamlessly with other software systems commonly used within organizations. Whether it's accounting software, time tracking tools, or communication platforms, MAKS HR plays well with others.</p> <p>8. Enhanced Communication:</p> <p>Effective communication is vital in any organization. MAKS HR fosters internal communication by offering features that facilitate collaboration and transparency among team members. This helps create a more connected and informed workforce.</p> <p>In conclusion, MAKS HR is your all-in-one solution for HR management. Its capabilities span from simplifying day-to-day administrative tasks to providing deep insights into your workforce. Whether you're a small startup or a large corporation, MAKS HR can adapt to your needs and grow with your organization.</p>"},{"location":"Get%20Started/#flavors-of-marks-hr","title":"Flavors of MARKS HR","text":"<p>MAKS HR comes in different flavors to cater to diverse organizational needs. Each flavor is tailored to specific requirements, offering flexibility and customization. </p> <p>MAKS HR Lite is a streamlined version designed for small businesses and startups, focusing on essential HR functions like employee records and basic payroll. On the other hand, MAKS HR Pro is ideal for mid-sized companies seeking comprehensive HR management. It offers a wider range of features, including performance management, benefits administration, and advanced reporting, all of which can be customized to fit specific organizational workflows. </p> <p>Lastly, MAKS HR Enterprise is tailored for large enterprises with complex HR needs. It includes advanced modules for talent acquisition, workforce planning, and compliance management, and is scalable to accommodate a growing workforce.</p>"},{"location":"Get%20Started/#tech-stack","title":"Tech Stack","text":"Client:    React,   JavaScript,   Html  <p>Server: Java, RabbitMq SwaggerSpringBoot, Gradle</p> <p>Cloud:Google Cloud,Kubernetes,Docker</p> <p>DataBases:Postgre,MongoDB</p>"},{"location":"MicroServices/","title":"MicroServices","text":"<p>Microservices offer unique advantages for developing and managing an application. Here are some reasons why we prefer this architecture:</p> <ul> <li> <p>Modularity and Independence: Microservices facilitate developing the application by breaking it down into small, independent services. This allows teams and developers to work freely on their own services.</p> </li> <li> <p>Scalability: Each microservice can be independently scaled based on demand. This makes the services more effective when handling large workloads.</p> </li> <li> <p>Technology Diversity: Different services can use different technologies. This enables each service to choose the best technology stack according to its specific needs.</p> </li> <li> <p>Rapid Development and Deployment: Being able to develop and deploy each service independently allows for rapid iterations and quick release of new features.</p> </li> <li> <p>Easy Maintenance and Troubleshooting: The independence of each service makes maintenance and troubleshooting easier. When an issue arises in a service, I can focus solely on that service.</p> </li> <li> <p>Reusability: Microservices make it easy to reuse functions and components. This allows us to use the same services in different projects.</p> </li> <li> <p>Ease of Deployment: Each service has its own independent deployment process, enabling us to update and deploy services quickly.</p> </li> </ul> <p>For these reasons, we prefer the microservices architecture because it provides faster development processes, better scalability, and more effective maintenance capabilities.</p>"},{"location":"Project%20Offerings/","title":"Project Offerings","text":""},{"location":"Project%20Offerings/#end-points","title":"End-Points","text":""},{"location":"Project%20Offerings/#rabbitmq","title":"RabbitMQ","text":""},{"location":"Project%20Offerings/#file-transfer-management","title":"File Transfer Management","text":""},{"location":"Project%20Offerings/#return-image","title":"Return image","text":""},{"location":"Project%20Offerings/#usageexamples","title":"Usage/Examples","text":""},{"location":"auth-microservice/","title":"Auth Service","text":""},{"location":"auth-microservice/#auth-microservice","title":"Auth microservice","text":"<p>Config  Constants  Controller  Dto  Exception  Mapper  RabbitmqFiles  Repository  Service  Utility</p>"},{"location":"config-server/","title":"Config Server","text":""},{"location":"config-server/#config-microservice","title":"Config microservice","text":""},{"location":"config-server/#api-gateway-service-application","title":"api-gateway-service-application","text":"<pre><code>server:\n  port: 80\n\nspring:\n  application:\n    name: api-gateway-service\n  main:\n    web-application-type: reactive\n  cloud:\n    gateway:\n      globalcors:\n        add-to-simple-url-handler-mapping: true\n        cors-configurations:\n          '[/**]':\n            allowedOrigins: \"*\"\n            allowedHeaders: \"*\"\n            allowedMethods:\n              - GET\n              - POST\n              - PUT\n              - DELETE\n      default-filters:\n        - RewritePath= /(?&lt;segment&gt;.*) , /api/v1/$\\{segment}\n      routes:\n        - id: auth-service\n          uri: http://localhost:9090\n          predicates:\n            - Path=/auth/**\n          filters:\n            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\n            - name: CircuitBreaker\n              args:\n                name: auth\n                fallbackUri: forward:/fallback/auth\n        - id: user-service\n          uri: http://localhost:9095\n          predicates:\n            - Path=/user/**\n          filters:\n            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\n            - name: CircuitBreaker\n              args:\n                name: user\n                fallbackUri: forward:/fallback/user\n        - id: mail-service\n          uri: http://localhost:7071\n          predicates:\n            - Path=/mail/**\n          filters:\n            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\n            - name: CircuitBreaker\n              args:\n                name: mail\n                fallbackUri: forward:/fallback/mail\n        - id: company-service\n          uri: http://localhost:9091\n          predicates:\n            - Path=/company/**\n          filters:\n            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\n            - name: CircuitBreaker\n              args:\n                name: company\n                fallbackUri: forward:/fallback/company\n        - id: comment-service\n          uri: http://localhost:9093\n          predicates:\n            - Path=/comment/**\n          filters:\n            - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin\n            - name: CircuitBreaker\n              args:\n                name: comment\n                fallbackUri: forward:/fallback/comment\n</code></pre>"},{"location":"config-server/#auth-application","title":"auth-application","text":"<pre><code>server:\n  port: 9090\n\nspring:\n  mvc:\n    servlet:\n      cors:\n        allow-credentials: false\n  datasource:\n    driver-class-name: org.postgresql.Driver\n    url: \"jdbc:postgresql://localhost:5432/AuthDB\"\n    username: \"postgres\"\n    password: ${POSTGRES_PASS}\n  jpa:\n    hibernate:\n      ddl-auto: update\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ${RABBITMQ_USERNAME}\n    password: ${RABBITMQ_PASS}\n</code></pre>"},{"location":"config-server/#comment-application","title":"comment-application","text":"<pre><code>server:\n  port: 9093\n\nspring:\n  data:\n    mongodb:\n      host: localhost\n      port: 27017\n      database: hrcommentdb\n      username: ${MONGO_USERNAME_COMMENT}\n      password: ${MONGO_PASS_COMMENT}\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ${RABBITMQ_USERNAME}\n    password: ${RABBITMQ_PASS}\n</code></pre>"},{"location":"config-server/#company-application","title":"company-application","text":"<pre><code>server:\n  port: 9091\n\nspring:\n  data:\n    mongodb:\n      host: localhost\n      port: 27017\n      database: hrcompanydb\n      username: ${MONGO_USERNAME_COMPANY}\n      password: ${MONGO_PASS_COMPANY}\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ${RABBITMQ_USERNAME}\n    password: ${RABBITMQ_PASS}\n</code></pre>"},{"location":"config-server/#mail-application","title":"mail-application","text":"<pre><code>server:\n  port: 7071\n\nspring:\n  mail:\n    username: ${MAIL_USERNAME}\n    password: ${MAIL_PASSWORD}\n    host: smtp.gmail.com\n    port: 587\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ${RABBITMQ_USERNAME}\n    password: ${RABBITMQ_PASS}\n</code></pre>"},{"location":"config-server/#user-application","title":"user-application","text":"<pre><code>server:\n  port: 9095\n\n  tomcat:\n    max-http-header-size: 819200\n\nspring:\n  data:\n    mongodb:\n      host: localhost\n      port: 27017\n      database: hruserdb\n      username: ${MONGO_USERNAME_USER}\n      password: ${MONGO_PASS_USER}\n  rabbitmq:\n    host: localhost\n    port: 5672\n    username: ${RABBITMQ_USERNAME}\n    password: ${RABBITMQ_PASS}\n</code></pre>"},{"location":"installation/","title":"Setup","text":"<p>Before you start using the project, make sure to follow the steps below. Please ensure that your configurations are complete before running the project</p> <ol> <li> <p>Clone the project from <code>GitHub</code></p> </li> <li> <p>Configure the <code>YAML</code> files.</p> </li> <li> <p>Add dependencies.</p> </li> <li> <p>Requirements</p> </li> <li> <p>Start the Config Server first.</p> </li> <li> <p>Start the other services of the project.</p> </li> <li> <p>Conduct tests using Swagger.</p> </li> <li> <p>Begin to enjoy!</p> </li> </ol>"},{"location":"installation/#cloning-the-repository","title":"Cloning the Repository:","text":"<ol> <li> <p>Open the Terminal or Command Prompt.</p> </li> <li> <p>Navigate to the directory where you want to clone the project. For example, if you want to create it in a folder on your desktop, type: <code>cd Desktop</code>.</p> </li> <li> <p>Then, use the following command to clone the project:</p> </li> </ol> <pre><code>git clone &lt;https://github.com/keremturak/hr-management-back-end.git&gt;\n</code></pre> <pre><code>git clone &lt;https://github.com/keremturak/hr-management-front-end.git&gt;\n</code></pre>"},{"location":"installation/#configure-the-yaml-files","title":"Configure the YAML files.","text":"<p>\ud83d\udc49Go To Yaml File</p>"},{"location":"installation/#add-dependencies","title":"Add Dependencies","text":"Tech Url 1 Spring Boot Data Jpa implementation 'org.springframework.boot:spring-boot-starter-data-jpa' 2 tymelift \"org.thymeleaf:thymeleaf-spring5:3.0.11.RELEASE\" 3 springDataMongodb \"org.springframework.boot:spring-boot-starter-data-mongodb:${versions.springBoot}\" 4 postgreSql \"org.postgresql:postgresql:${versions.postgreSql}\" 5 springBootRabbitMQ \"org.springframework.boot:spring-boot-starter-amqp:${versions.springBoot}\" 6 Spring Boot Web implementation 'org.springframework.boot:spring-boot-starter-web' 7 Lombok compileOnly 'org.projectlombok:lombok'-----annotationProcessor 'org.projectlombok:lombok' 8 MySql implementation 'mysql:mysql-connector-java:8.0.33' 9 Swagger Ui implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0' 10 Mapstruct implementation 'org.mapstruct:mapstruct:1.5.5.Final' 11 Spring Boot Starter Mail implementation 'org.springframework.boot:spring-boot-starter-mail:3.1.1' 12 javaJWT \"com.auth0:java-jwt:${versions.jwt}\" 13 springCloudConfigServer \"org.springframework.cloud:spring-cloud-config-server:${versions.springCloud}\" 14 springCloudConfigClient \"org.springframework.cloud:spring-cloud-config-client:${versions.springCloud}\" 15 springCloudConfigStarter \"org.springframework.cloud:spring-cloud-starter-config:${versions.springCloud}\" 16 Validator implementation  'org.hibernate.validator:hibernate-validator:8.0.0.Final' 17 springCloudStarterApiGateway \"org.springframework.cloud:spring-cloud-starter-gateway:${versions.springCloud}\" 18 springCloudCircuitBreaker \"org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:${versions.circuitBreaker}\" 19 springCloudCircuitReactor \"org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j:${versions.circuitBreaker}\""},{"location":"installation/#requirements","title":"Requirements","text":"<ul> <li>Java 8 SE or newer versions are required.</li> <li>The application serves as a server for API file operations, saving multiple files to the image folder under resources.</li> <li>The application utilizes both PostgreSQL and MongoDB as databases.</li> <li>Docker must be installed to initialize both MongoDB and RabbitMQ.</li> <li>Exercise caution as numerous validation checks are in place when performing operations. Adhere to these validations for smooth operation.</li> </ul>"},{"location":"installation/#mongodb-dockerize","title":"MongoDB Dockerize","text":"<p>Install Docker</p> <p>Ensure you have Docker installed on your system. You can download and install Docker from the official Docker website.</p> <p>Pull MongoDB Docker Image:</p> <p>Open a terminal or command prompt and execute the following command to pull the official MongoDB Docker image:</p> <pre><code>docker pull mongo\n</code></pre> <p>Run MongoDB as a Docker Container:</p> <p>After pulling the image, you can run a MongoDB container using the following command:</p> <pre><code>```bash\ndocker run -d --name mongodb-container -p 27017:27017 mongo\n```\n</code></pre> <ul> <li><code>mongodb-container</code>: This is the name you assign to your Docker container. You can choose a different name if you prefer.</li> <li><code>27017:27017</code>: This maps the port 27017 of the Docker container to the same port on your localhost.</li> </ul>"},{"location":"installation/#rabbitmq-dockerize","title":"RabbitMQ Dockerize","text":"<ol> <li> <p>Pull RabbitMQ Docker Image:</p> <p>This command downloads the RabbitMQ Docker image.</p> </li> <li> <p>Running the RabbitMQ Container:</p> <p>To start the RabbitMQ container, use the following command:</p> <pre><code>docker run -d --name rabbitmq-container -p 5672:5672 -p 15672:15672 rabbitmq:3-management\n</code></pre> <ul> <li><code>rabbitmq-container</code>: This is the name you assign to your Docker container. You can choose a different name if you prefer.</li> <li><code>5672:5672</code> and <code>15672:15672</code>: These map the ports used by RabbitMQ.</li> </ul> </li> <li> <p>Accessing the RabbitMQ Management Interface:</p> <p>Open your browser and go to http://localhost:15672 to access the RabbitMQ management interface. The default username and password are \"guest/guest\".</p> </li> <li> <p>Stopping and Removing the RabbitMQ Container:</p> <p>To stop and remove the RabbitMQ container, you can use the following commands:</p> <ul> <li> <p>Stop:</p> <pre><code>docker stop rabbitmq-container\n</code></pre> </li> <li> <p>Remove:</p> <pre><code>docker rm rabbitmq-container\n</code></pre> </li> </ul> </li> </ol>"},{"location":"installation/#environment-variables","title":"Environment Variables","text":"<p><code>${MONGO_USERNAME_COMPANY}</code> <code>${MONGO_PASS_COMPANY}</code> <code>${MONGO_USERNAME_COMMENT}</code> <code>${MONGO_PASS_COMMENT}</code> <code>${MONGO_USERNAME_USER}</code> <code>${MONGO_PASS_USER}</code> <code>${POSTGRES_PASS}</code> <code>${RABBITMQ_USERNAME}</code> <code>${RABBITMQ_PASS}</code> <code>${MAIL_USERNAME}</code> <code>${MAIL_PASSWORD}</code> </p>"},{"location":"installation/#starting-the-config-server","title":"Starting the Config Server","text":"<p>You can start the <code>ConfigServerApplication</code> inside the config server, and this way, you can see which port it is running on.</p> <p></p>"},{"location":"installation/#starting-the-other-service","title":"Starting the Other Service","text":"<p>You should run the auth, user, comment, company, and mail services as applied in the example above.</p>"},{"location":"installation/#conduct-tests-using-swagger","title":"Conduct tests using Swagger.","text":"<p>\ud83d\udc49Go To End Points</p>"},{"location":"installation/#begin-to-enjoy","title":"Begin to enjoy!","text":""},{"location":"mail-service/","title":"Mail Service","text":""},{"location":"mail-service/#mail-microservice","title":"Mail microservice","text":""},{"location":"mail-service/#temlates","title":"Temlates","text":"<p>config.server \u00f6nce config server \u00e7al\u0131\u015ft\u0131r\u0131lmal\u0131 Some <code>code</code> blocks</p>"},{"location":"mail-service/#api-gateway-microservice","title":"Api-Gateway microservice","text":"<p>config.server \u00f6nce config server \u00e7al\u0131\u015ft\u0131r\u0131lmal\u0131 Some <code>code</code> blocks</p>"}]}